<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangzi.mapper.TCustomerPreOrderMapper">
  <resultMap id="BaseResultMap" type="com.liangzi.pojo.TCustomerPreOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="contact_id" jdbcType="BIGINT" property="contactId" />
    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_count" jdbcType="INTEGER" property="productCount" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="contact_date" jdbcType="DATE" property="contactDate" />
    <result column="sales_id" jdbcType="BIGINT" property="salesId" />
    <result column="sales_name" jdbcType="VARCHAR" property="salesName" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="creator_id" jdbcType="BIGINT" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updator_id" jdbcType="BIGINT" property="updatorId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="unit" jdbcType="TINYINT" property="unit" />
    <result column="exchange_rate" jdbcType="VARCHAR" property="exchangeRate" />
    <result column="annual_earnings" jdbcType="VARCHAR" property="annualEarnings" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, customer_id, type, status, contact_id, contact_name, product_id, product_name, 
    product_count, amount, contact_date, sales_id, sales_name, comment, creator_id, create_time, 
    updator_id, update_time, is_valid, unit, exchange_rate, annual_earnings
  </sql>
  <select id="selectByExample" parameterType="com.liangzi.pojo.TCustomerPreOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer_pre_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer_pre_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_customer_pre_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liangzi.pojo.TCustomerPreOrderExample">
    delete from t_customer_pre_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liangzi.pojo.TCustomerPreOrder">
    insert into t_customer_pre_order (id, num, customer_id, 
      type, status, contact_id, 
      contact_name, product_id, product_name, 
      product_count, amount, contact_date, 
      sales_id, sales_name, comment, 
      creator_id, create_time, updator_id, 
      update_time, is_valid, unit, 
      exchange_rate, annual_earnings)
    values (#{id,jdbcType=BIGINT}, #{num,jdbcType=VARCHAR}, #{customerId,jdbcType=BIGINT}, 
      #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{contactId,jdbcType=BIGINT}, 
      #{contactName,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT}, #{productName,jdbcType=VARCHAR}, 
      #{productCount,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{contactDate,jdbcType=DATE}, 
      #{salesId,jdbcType=BIGINT}, #{salesName,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{creatorId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updatorId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=TINYINT}, #{unit,jdbcType=TINYINT}, 
      #{exchangeRate,jdbcType=VARCHAR}, #{annualEarnings,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liangzi.pojo.TCustomerPreOrder">
    insert into t_customer_pre_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="contactId != null">
        contact_id,
      </if>
      <if test="contactName != null">
        contact_name,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productCount != null">
        product_count,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="contactDate != null">
        contact_date,
      </if>
      <if test="salesId != null">
        sales_id,
      </if>
      <if test="salesName != null">
        sales_name,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updatorId != null">
        updator_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="exchangeRate != null">
        exchange_rate,
      </if>
      <if test="annualEarnings != null">
        annual_earnings,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="contactId != null">
        #{contactId,jdbcType=BIGINT},
      </if>
      <if test="contactName != null">
        #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        #{productCount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="contactDate != null">
        #{contactDate,jdbcType=DATE},
      </if>
      <if test="salesId != null">
        #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesName != null">
        #{salesName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatorId != null">
        #{updatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=TINYINT},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="annualEarnings != null">
        #{annualEarnings,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liangzi.pojo.TCustomerPreOrderExample" resultType="java.lang.Long">
    select count(*) from t_customer_pre_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_customer_pre_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.contactId != null">
        contact_id = #{record.contactId,jdbcType=BIGINT},
      </if>
      <if test="record.contactName != null">
        contact_name = #{record.contactName,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productCount != null">
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.contactDate != null">
        contact_date = #{record.contactDate,jdbcType=DATE},
      </if>
      <if test="record.salesId != null">
        sales_id = #{record.salesId,jdbcType=BIGINT},
      </if>
      <if test="record.salesName != null">
        sales_name = #{record.salesName,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatorId != null">
        updator_id = #{record.updatorId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=TINYINT},
      </if>
      <if test="record.exchangeRate != null">
        exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="record.annualEarnings != null">
        annual_earnings = #{record.annualEarnings,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_customer_pre_order
    set id = #{record.id,jdbcType=BIGINT},
      num = #{record.num,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      contact_id = #{record.contactId,jdbcType=BIGINT},
      contact_name = #{record.contactName,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=BIGINT},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_count = #{record.productCount,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      contact_date = #{record.contactDate,jdbcType=DATE},
      sales_id = #{record.salesId,jdbcType=BIGINT},
      sales_name = #{record.salesName,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      updator_id = #{record.updatorId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_valid = #{record.isValid,jdbcType=TINYINT},
      unit = #{record.unit,jdbcType=TINYINT},
      exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      annual_earnings = #{record.annualEarnings,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liangzi.pojo.TCustomerPreOrder">
    update t_customer_pre_order
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="contactId != null">
        contact_id = #{contactId,jdbcType=BIGINT},
      </if>
      <if test="contactName != null">
        contact_name = #{contactName,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productCount != null">
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="contactDate != null">
        contact_date = #{contactDate,jdbcType=DATE},
      </if>
      <if test="salesId != null">
        sales_id = #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesName != null">
        sales_name = #{salesName,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatorId != null">
        updator_id = #{updatorId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=TINYINT},
      </if>
      <if test="exchangeRate != null">
        exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="annualEarnings != null">
        annual_earnings = #{annualEarnings,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liangzi.pojo.TCustomerPreOrder">
    update t_customer_pre_order
    set num = #{num,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      contact_id = #{contactId,jdbcType=BIGINT},
      contact_name = #{contactName,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      product_count = #{productCount,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      contact_date = #{contactDate,jdbcType=DATE},
      sales_id = #{salesId,jdbcType=BIGINT},
      sales_name = #{salesName,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updator_id = #{updatorId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=TINYINT},
      unit = #{unit,jdbcType=TINYINT},
      exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      annual_earnings = #{annualEarnings,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>